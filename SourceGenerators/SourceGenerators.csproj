<Project Sdk="Microsoft.NET.Sdk">

  <!-- Project Settings -->
  <PropertyGroup>
    <LangVersion>preview</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyName>GodotSharp.SourceGenerators</AssemblyName>
    <RootNamespace>GodotSharp.SourceGenerators</RootNamespace>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
  </PropertyGroup>

  <!-- Package Settings -->
  <PropertyGroup>
    <Authors>Cat-Lips</Authors>
    <Description>
		C# Source Generators for use with the Godot Game Engine (supports Godot 4 and .NET 8!)

		* `SceneTree` class attribute:
		-- Generates class property for uniquely named nodes
		-- Provides strongly typed access to the scene hierarchy (via `_` operator)

		* `GodotOverride` method attribute:
		-- Allows use of On*, instead of virtual _* overrides
		-- (Requires partial method declaration for use with Godot 4.0)

		* `Notify` property attribute:
		-- Generates boiler plate code, triggering only when values differ
		-- (Automagically triggers nested changes for Resource and Resource[])

		* `InputMap` class attribute:
		-- Provides strongly typed access to project defined input actions

		* `LayerNames` class attribute:
		-- Provides strongly typed access to project defined layer names

		* `CodeComments` class attribute:
		-- Provides a nested static class to access property comments from code (useful for in-game tooltips, etc)

		* `OnInstantiate` method attribute:
		-- Generates a static Instantiate method with matching args that calls attributed method as part of the instantiation process
		-- (Also generates a protected constructor to ensure proper initialisation - can be deactivated via attribute)

		* `OnImport` method attribute (GD4 only):
		-- Generates default plugin overrides and options to make plugin class cleaner (inherit from OnImportEditorPlugin)

		* Includes base classes/helpers to create project specific source generators
	</Description>
    <PackageReleaseNotes>
		v.2.4.0
		- ADDED: Added LayerNames attribute

		v.2.3.4
		- ADDED: Support for .NET 8.0
		- ADDED: Nested InputMap entries
		- ADDED: OnImport attribute for editor only builds (GD4 only)

		v.2.1.0
		- ADDED: CodeComments attribute
		- ADDED: OnInstantiate attribute (with protected constructor)
		- ADDED: Inline changed action on Notify setter
		- ADDED: Implicit operators as an alternative to calling .Get() on scene tree for non-leaf nodes

		v.2.0.0
		- ADDED: Support for Godot 4.0
		-- KnownIssue: GodotOverride requires an additional partial method override declaration
		- CHANGED: Notify must be used on property instead of field to access privately generated content
		- ADDED: InputMap attribute

		v.1.3.3
		- ADDED: Support for placeholder scenes
		- ADDED: Support for editable instanced scenes
		- FIXED: GodotOverride in derived class now calls rather than hides base method
		- FIXED: Previously, types could not share the same name. This has now been fixed.
		- ADDED: Notify attribute (with support for [Export])
		- ADDED: Added support for uniquely named nodes (ie, Godot 3.5 - GetNode("%MyUniqueNode"))

		v.1.2.0
		- Replaces ISourceGenerator with IIncrementalGenerator for faster builds
		- Hierarchy of inherited scenes are now fully accessible from base classes
		- Hierarchy of instanced scenes can be made accessible using [SceneTree(traverseInstancedScenes=true)]
		- FIXED: Modifications (overrides) of inheritance hierarchy now supported
		- FIXED: Inheriting/Instancing scenes without scripts now supported
		- FIXED: Consumers with implicit usings enabled now supported

		v.1.1.4
		- Exposed base classes/helpers to help create project specific source generators

		v.1.0.0
		- Initial release (SceneTree/GodotOverride)
	</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/Cat-Lips/GodotSharp.SourceGenerators</RepositoryUrl>
    <PackageProjectUrl>https://github.com/Cat-Lips/GodotSharp.SourceGenerators</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>Godot C# SourceGenerator</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <!--<Version>2.3.4</Version>-->
    <Version>2.4.0-$([System.DateTime]::Now.ToString(yyMMdd-HHmm)).$(Configuration)</Version>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\README.md" Pack="true" PackagePath="\" Link="Package\docs\README.md" />
    <None Include="Package\build\$(AssemblyName).targets" Pack="true" PackagePath="build" />
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers\dotnet\cs" Link="Package\analyzers\dotnet\cs\$(AssemblyName).dll" />
  </ItemGroup>

  <!-- Scriban Settings -->
  <ItemGroup>
    <EmbeddedResource Include="**\*.sbncs" />
  </ItemGroup>
  <PropertyGroup>
    <PackageScribanIncludeSource>true</PackageScribanIncludeSource>
  </PropertyGroup>

  <!-- Package References -->
  <ItemGroup>
    <PackageReference Include="IndexRange" Version="1.0.3" PrivateAssets="all" />
    <PackageReference Include="IsExternalInit" Version="1.0.3" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.8.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" PrivateAssets="all" />
    <PackageReference Include="Scriban" Version="5.10.0" IncludeAssets="build" PrivateAssets="all" />
  </ItemGroup>

</Project>
