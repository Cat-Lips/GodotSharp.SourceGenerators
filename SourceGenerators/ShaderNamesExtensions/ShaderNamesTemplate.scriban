{{-#####-CONTENT-#####-}}

{{~ capture body ~}}
    public static string ResPath { get; } = "{{ResPath}}";
{{~ if ShaderNames.size != 0 ~}}

    public static class Params
    {
{{~ for x in ShaderNames ~}}
        public static readonly StringName {{x.SafeName}} = "{{x.RawName}}";
{{~ end ~}}

        public static readonly StringName[] All = [{{for x in ShaderNames}}{{x.SafeName}}{{if !for.last}}, {{end}}{{end}}];
    }

    public static class Default
    {
{{~ for x in ShaderNames ~}}
        public static readonly {{x.Type}} {{x.SafeName}} = {{x.Default ?? "default"}};
{{~ end ~}}
    }

{{~ for x in ShaderNames ~}}
    public static {{x.Type}} Get{{x.SafeName}}(ShaderMaterial material) => ({{x.Type}}){{if x.IsEnum}}(int){{end}}material.GetShaderParameter(Params.{{x.SafeName}});
{{~ end ~}}

{{~ for x in ShaderNames ~}}
    public static void Set{{x.SafeName}}(ShaderMaterial material, {{x.Type}} value) => material.SetShaderParameter(Params.{{x.SafeName}}, {{if x.IsEnum}}(int){{end}}value);
{{~ end ~}}

{{~ for x in ShaderNames ~}}
    public static void Reset{{x.SafeName}}(ShaderMaterial material) => material.SetShaderParameter(Params.{{x.SafeName}}, {{if x.IsEnum}}(int){{end}}Default.{{x.SafeName}});
{{~ end ~}}

    public static void Reset(ShaderMaterial material)
    {
{{~ for x in ShaderNames ~}}
        Reset{{x.SafeName}}(material);
{{~ end ~}}
    }
{{~ end ~}}
{{~ end ~}}

{{-#####-MAIN-#####-}}

{{~ RenderClass body ~}}
